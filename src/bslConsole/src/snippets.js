define([], function () {
  
  bslSnippets = {
    "Если": {
      "prefix": "Если",
      "body": "Если ${1:Условие} Тогда\n\t$0\nКонецЕсли;",
      "description": "Если"
    },
    "ЕслиИначе": {
      "prefix": "Если",
      "body": "Если ${1:Условие} Тогда\n\t$0\nИначе\nКонецЕсли;",
      "description": "ЕслиИначе"
    },
    "Пока": {
      "prefix": "Пока",
      "body": "Пока ${1:Условие} Цикл\n\t$0\nКонецЦикла;",
      "description": "Пока"
    },
    "Для": {
      "prefix": "Для",
      "body": "Для ${1:Счетчик} = ${2:1} По ${3:Ограничение} Цикл\n\t$0\nКонецЦикла;",
      "description": "Для"
    },
    "Для Каждого": {
      "prefix": "ДляКаждого",
      "body": "Для Каждого ${1:Переменная} Из ${2:Коллекция} Цикл\n\t$0\nКонецЦикла;",
      "description": "Для Каждого"
    },
    "Процедура": {
      "prefix": "Процедура",
      "body": "Процедура ${1:ИмяПроцедуры}()\n\t$0\nКонецПроцедуры",
      "description": "Процедура"
    },
    "Процедура (с заголовком)": {
      "prefix": "Процедура",
      "body": "// <Описание процедуры>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\nПроцедура ${1:ИмяПроцедуры}()\n\t$0\nКонецПроцедуры",
      "description": "Процедура (с заголовком)"
    },
    "Процедура модуля формы": {
      "prefix": "Процедура",
      "body": "// <Описание процедуры>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\n&${1:ВыберитеДирективуКомпиляции}\nПроцедура ${2:ИмяПроцедуры}()\n\t$0\nКонецПроцедуры",
      "description": "Процедура модуля формы"
    },
    "Процедура модуля команды": {
      "prefix": "Процедура",
      "body": "// <Описание процедуры>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\n&${1:ВыберитеДирективуКомпиляции}\nПроцедура ${2:ИмяПроцедуры}()\n\t$0\nКонецПроцедуры",
      "description": "Процедура модуля команды"
    },
    "Функция": {
      "prefix": "Функция",
      "body": "Функция ${1:ИмяФункции}()\n\t$0\nКонецФункции",
      "description": "Функция"
    },
    "Функция (с заголовком)": {
      "prefix": "Функция",
      "body": "// <Описание функции>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\n// Возвращаемое значение:\n//   <Тип.Вид>   - <описание возвращаемого значения>\n//\nФункция ${1:ИмяФункции}()\n\t$0\nКонецФункции",
      "description": "Функция (с заголовком)"
    },
    "Функция модуля формы": {
      "prefix": "Функция",
      "body": "// <Описание функции>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\n// Возвращаемое значение:\n//   <Тип.Вид>   - <описание возвращаемого значения>\n//\n&${1:ВыберитеДирективуКомпиляции}\nФункция ${2:ИмяФункции}()\n\t$0\nКонецФункции",
      "description": "Функция модуля формы"
    },
    "Функция модуля команды": {
      "prefix": "Функция",
      "body": "// <Описание функции>\n//\n// Параметры:\n//  <Параметр1>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//  <Параметр2>  - <Тип.Вид> - <описание параметра>\n//                 <продолжение описания параметра>\n//\n// Возвращаемое значение:\n//   <Тип.Вид>   - <описание возвращаемого значения>\n//\n&${1:ВыберитеДирективуКомпиляции}\nФункция ${2:ИмяФункции}()\n\t$0\nКонецФункции",
      "description": "Функция модуля команды"
    },
    "Возврат": {
      "prefix": "Возврат",
      "body": "Возврат;$0",
      "description": "Возврат"
    },
    "Попытка": {
      "prefix": "Попытка",
      "body": "Попытка\n\t$0\nИсключение\nКонецПопытки;",
      "description": "Попытка"
    },
    "Директива компиляции": {
      "prefix": "Директива",
      "body": "&${1:ВыберитеДирективуКомпиляции}",
      "description": "Директива компиляции"
    },
    "Инструкция Если": {
      "prefix": "Инструкция",
      "body": "#Если ${1:ВыберитеИнструкциюПрепроцессора} Тогда\n\t$0\n#КонецЕсли",
      "description": "Инструкция Если"
    },
    "Инструкция Область": {
      "prefix": "Область",
      "body": "#Область $0\n#КонецОбласти",
      "description": "Инструкция Область"
    },
    "Перечисление": {
      "prefix": "Перечисление",
      "body": "ПредопределенноеЗначение(\"Перечисление.${1:ВыберитеЗначениеПеречисления}\")",
      "description": "Перечисление"
    },
    "Получить функциональную опцию": {
      "prefix": "Функциональнаяопция",
      "body": "ПолучитьФункциональнуюОпцию(\"${1:ВыберитеФункциональнуюОпцию}\")",
      "description": "Получить функциональную опцию"
    },
    "Получить функциональную опцию интерфейса": {
      "prefix": "Функциональнаяопция",
      "body": "ПолучитьФункциональнуюОпциюИнтерфейса(\"${1:ВыберитеФункциональнуюОпцию}\")",
      "description": "Получить функциональную опцию интерфейса"
    },
    "Открыть общую форму": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\");",
      "description": "Открыть общую форму"
    },
    "Открыть общую форму (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\", ПараметрыФормы);",
      "description": "Открыть общую форму (с параметрами)"
    },
    "Получить общую форму": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\");",
      "description": "Получить общую форму"
    },
    "Получить общую форму (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"ОбщаяФорма.${1:ВыберитеОбщуюФорму}\");",
      "description": "Получить общую форму (с параметрами)"
    },
    "Открыть форму плана обмена": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\");",
      "description": "Открыть форму плана обмена"
    },
    "Открыть форму плана обмена (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму плана обмена (с параметрами)"
    },
    "Получить форму плана обмена": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\");",
      "description": "Получить форму плана обмена"
    },
    "Получить форму плана обмена (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"ПланОбмена.${1:ВыберитеПланОбмена}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму плана обмена (с параметрами)"
    },
    "Обход элементов": {
      "prefix": "СправочникиВыбрать",
      "body": "Выборка = Справочники.$1.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход элементов"
    },
    "Получить/установить константу": {
      "prefix": "Константы",
      "body": "Константы.$1.${2:ВыборМетода}()",
      "description": "Получить/установить константу"
    },
    "Установить константу": {
      "prefix": "Константы",
      "body": "Константы.$1.Установить($0);",
      "description": "Установить константу"
    },
    "Получить константу": {
      "prefix": "Константы",
      "body": "Константы.$1.Получить()",
      "description": "Получить константу"
    },
    "Открыть форму справочника": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму справочника"
    },
    "Открыть форму справочника (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму справочника (с параметрами)"
    },
    "Получить форму справочника": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму справочника"
    },
    "Получить форму справочника (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"Справочник.${1:ВыберитеСправочник}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму справочника (с параметрами)"
    },
    "Обход элементов иерархически": {
      "prefix": "СправочникиВыбратьИерархически",
      "body": "Выборка = Справочники.$1.ВыбратьИерархически();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход элементов иерархически"
    },
    "Открыть форму документа": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму документа"
    },
    "Открыть форму документа (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму документа (с параметрами)"
    },
    "Получить форму документа": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму документа"
    },
    "Получить форму документа (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"Документ.${1:ВыберитеДокумент}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму документа (с параметрами)"
    },
    "Обход документов": {
      "prefix": "ДокументыВыбрать",
      "body": "Выборка = Документы.$1.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход документов"
    },
    "Движения": {
      "prefix": "Движения",
      "body": "Движения.${1:ВыборРегистра}",
      "description": "Движения"
    },
    "Открыть форму отчета": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму отчета"
    },
    "Открыть форму отчета (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму отчета (с параметрами)"
    },
    "Получить форму отчета": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму отчета"
    },
    "Получить форму отчета (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"Отчет.${1:ВыберитеОтчет}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму отчета (с параметрами)"
    },
    "Открыть форму обработки": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму обработки"
    },
    "Открыть форму обработки (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму обработки (с параметрами)"
    },
    "Получить форму обработки": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму обработки"
    },
    "Получить форму обработки (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"Обработка.${1:ВыберитеОбработку}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму обработки (с параметрами)"
    },
    "Открыть форму плана видов характеристик": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму плана видов характеристик"
    },
    "Открыть форму плана видов характеристик (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму плана видов характеристик (с параметрами)"
    },
    "Получить форму плана видов характеристик": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму плана видов характеристик"
    },
    "Получить форму плана видов характеристик (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"ПланВидовХарактеристик.${1:ВыберитеПвх}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму плана видов характеристик (с параметрами)"
    },
    "Обход видов характеристик": {
      "prefix": "ПланыВидовХарактеристикВыбрать",
      "body": "Выборка = ПланыВидовХарактеристик.$1.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход видов характеристик"
    },
    "Открыть форму плана счетов": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму плана счетов"
    },
    "Открыть форму плана счетов (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму плана счетов (с параметрами)"
    },
    "Получить форму плана счетов": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму плана счетов"
    },
    "Получить форму плана счетов (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"ПланСчетов.${1:ВыберитеПланСчетов}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму плана счетов (с параметрами)"
    },
    "Найти по коду": {
      "prefix": "ПланыСчетов",
      "body": "ПланыСчетов.$1.НайтиПоКоду($0)",
      "description": "Найти по коду"
    },
    "Открыть форму плана видов расчета": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму плана видов расчета"
    },
    "Открыть форму плана видов расчета (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму плана видов расчета (с параметрами)"
    },
    "Получить форму плана видов расчета": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму плана видов расчета"
    },
    "Получить форму плана видов расчета (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"ПланВидовРасчета.${1:ВыберитеПланВидовРасчета}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму плана видов расчета (с параметрами)"
    },
    "Обход видов расчета": {
      "prefix": "ПланыВидовРасчетаВыбрать",
      "body": "Выборка = ПланыВидовРасчета.$1.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход видов расчета"
    },
    "Открыть форму бизнес-процесса": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму бизнес-процесса"
    },
    "Открыть форму бизнес-процесса (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму бизнес-процесса (с параметрами)"
    },
    "Получить форму бизнес-процесса": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму бизнес-процесса"
    },
    "Получить форму бизнес-процесса (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"БизнесПроцесс.${1:ВыберитеБизнес-Процесс}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму бизнес-процесса (с параметрами)"
    },
    "Обход бизнес-процессов": {
      "prefix": "БизнесПроцессыВыбрать",
      "body": "Выборка = БизнесПроцессы.$1.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Обход бизнес-процессов"
    },
    "Открыть форму задачи": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму задачи"
    },
    "Открыть форму задачи (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму задачи (с параметрами)"
    },
    "Получить форму задачи": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму задачи"
    },
    "Получить форму задачи (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"Задача.${1:ВыберитеЗадачу}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму задачи (с параметрами)"
    },
    "Открыть форму регистра сведений": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму регистра сведений"
    },
    "Открыть форму регистра сведений (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму регистра сведений (с параметрами)"
    },
    "Получить форму регистра сведений": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму регистра сведений"
    },
    "Получить форму регистра сведений (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"РегистрСведений.${1:ВыберитеРегистрСведений}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму регистра сведений (с параметрами)"
    },
    "Выборка записей регистра сведений": {
      "prefix": "РегистрыСведенийВыбрать",
      "body": "Выборка = РегистрыСведений.${1:ВыберитеРегистрСведений}.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Выборка записей регистра сведений"
    },
    "Выборка записей регистра сведений (по регистратору)": {
      "prefix": "РегистрыСведенийВыбратьПоРегистратору",
      "body": "Выборка = РегистрСведений.${1:ВыберитеРегистрСведений}.ВыбратьПоРегистратору($0);\nПока Выборка.Следующий() Цикл\nКонецЦикла;",
      "description": "Выборка записей регистра сведений (по регистратору)"
    },
    "Открыть форму регистра накопления": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму регистра накопления"
    },
    "Открыть форму регистра накопления (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму регистра накопления (с параметрами)"
    },
    "Получить форму регистра накопления": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму регистра накопления"
    },
    "Получить форму регистра накопления (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"РегистрНакопления.${1:ВыберитеРегистрНакопления}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму регистра накопления (с параметрами)"
    },
    "Выборка записей регистра накопления": {
      "prefix": "РегистрНакопленияВыбрать",
      "body": "Выборка = РегистрыНакопления.${1:ВыберитеРегистрНакопления}.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Выборка записей регистра накопления"
    },
    "Выборка записей регистра накопления (по регистратору)": {
      "prefix": "РегистрНакопленияВыбратьПоРегистратору",
      "body": "Выборка = РегистрыНакопления.${1:ВыберитеРегистрНакопления}.ВыбратьПоРегистратору($0);\nПока Выборка.Следующий() Цикл\nКонецЦикла;",
      "description": "Выборка записей регистра накопления (по регистратору)"
    },
    "Открыть форму регистра бухгалтерии": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму регистра бухгалтерии"
    },
    "Открыть форму регистра бухгалтерии (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму регистра бухгалтерии (с параметрами)"
    },
    "Получить форму регистра бухгалтерии": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму регистра бухгалтерии"
    },
    "Получить форму регистра бухгалтерии (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"РегистрБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму регистра бухгалтерии (с параметрами)"
    },
    "Выборка записей регистра бухгалтерии": {
      "prefix": "РегистрыБухгалтерииВыбрать",
      "body": "Выборка = РегистрыБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Выборка записей регистра бухгалтерии"
    },
    "Выборка записей регистра бухгалтерии (по регистратору)": {
      "prefix": "РегистрыБухгалтерииВыбратьПоРегистратору",
      "body": "Выборка = РегистрыБухгалтерии.${1:ВыберитеРегистрБухгалтерии}.ВыбратьПоРегистратору($0);\nПока Выборка.Следующий() Цикл\nКонецЦикла;",
      "description": "Выборка записей регистра бухгалтерии (по регистратору)"
    },
    "Открыть форму регистра расчета": {
      "prefix": "ОткрытьФорму",
      "body": "ОткрытьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}$0\");",
      "description": "Открыть форму регистра расчета"
    },
    "Открыть форму регистра расчета (с параметрами)": {
      "prefix": "ОткрытьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nОткрытьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Открыть форму регистра расчета (с параметрами)"
    },
    "Получить форму регистра расчета": {
      "prefix": "ПолучитьФорму",
      "body": "ПолучитьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}$0\");",
      "description": "Получить форму регистра расчета"
    },
    "Получить форму регистра расчета (с параметрами)": {
      "prefix": "ПолучитьФорму",
      "body": "ПараметрыФормы = Новый Структура;\nПараметрыФормы.Вставить(\"$0\", );\nФорма = ПолучитьФорму(\"РегистрРасчета.${1:ВыберитеРегистрРасчета}.${2:ВыберитеФорму}\", ПараметрыФормы);",
      "description": "Получить форму регистра расчета (с параметрами)"
    },
    "Выборка записей регистра расчета": {
      "prefix": "РегистрыРасчетаВыбрать",
      "body": "Выборка = РегистрыРасчета.${1:ВыберитеРегистрРасчета}.Выбрать();\nПока Выборка.Следующий() Цикл\n\t$0\nКонецЦикла;",
      "description": "Выборка записей регистра расчета"
    },
    "Выборка записей регистра расчета (по регистратору)": {
      "prefix": "РегистрыРасчетаВыбратьПоРегистратору",
      "body": "Выборка = РегистрыРасчета.${1:ВыберитеРегистрРасчета}.ВыбратьПоРегистратору($0);\nПока Выборка.Следующий() Цикл\nКонецЦикла;",
      "description": "Выборка записей регистра расчета (по регистратору)"
    },
    "Сообщение": {
      "prefix": "Сообщение",
      "body": "Сообщение = Новый СообщениеПользователю;\nСообщение.Текст = \"$0\";\nСообщение.Поле = \"\";\nСообщение.УстановитьДанные();\nСообщение.Сообщить();",
      "description": "Сообщение"
    },
    "Предупреждение": {
      "prefix": "Предупреждение",
      "body": "Предупреждение($0);",
      "description": "Предупреждение"
    },
    "Формат": {
      "prefix": "Формат",
      "body": "Формат($0, \"$1\")",
      "description": "Формат"
    },
    "Создать структуру": {
      "prefix": "Структура",
      "body": "Новый Структура(\"$0\", )",
      "description": "Создать структуру"
    },
    "Запрос": {
      "prefix": "Запрос",
      "body": "Запрос = Новый Запрос;\nЗапрос.Текст = \"$1\";\nРезультат = Запрос.Выполнить();\nВыборка = Результат.Выбрать();\nПока Выборка.Следующий() Цикл\n  $0\nКонецЦикла;",
      "description": "Запрос"
    },
    "Запрос с параметром": {
      "prefix": "Запрос",
      "body": "Запрос = Новый Запрос;\nЗапрос.Текст = \"$1\";\nЗапрос.УстановитьПараметр(\"$0\", );\nРезультат = Запрос.Выполнить();\nВыборка = Результат.Выбрать();\nПока Выборка.Следующий() Цикл\nКонецЦикла;",
      "description": "Запрос с параметром"
    },
    "Вопрос": {
      "prefix": "Вопрос",
      "body": "Вопрос(\"${1:ТекстВопроса}\", ${2:РежимДиалогаВопрос})",
      "description": "Вопрос"
    },
    "Вопрос с анализом результата": {
      "prefix": "Вопрос",
      "body": "Вопрос(\"${1:ТекстВопроса}\", ${2:РежимДиалогаВопрос}) = ${3:КодВозвратаДиалога}",
      "description": "Вопрос с анализом результата"
    },
    "Проверка типа": {
      "prefix": "ПроверитьТип",
      "body": "Если ТипЗнч(${1:ВыражениеДляПроверкиТипа}) = Тип(\"${2:ВыберитеТип}\") Тогда\n\t$0\nКонецЕсли;",
      "description": "Проверка типа"
    },
    "If": {
      "prefix": "If",
      "body": "If ${1:Condition} Then\n\t$0\nEndIf;",
      "description": "If"
    },
    "IfElse": {
      "prefix": "If",
      "body": "If ${1:Condition} Then\n\t$0\nElse\nEndIf;",
      "description": "IfElse"
    },
    "While": {
      "prefix": "While",
      "body": "While ${1:Condition} Do\n\t$0\nEndDo;",
      "description": "While"
    },
    "For": {
      "prefix": "For",
      "body": "For ${1:Counter} To ${2:Limit} Do\n\t$0\nEndDo;",
      "description": "For"
    },
    "For Each": {
      "prefix": "ForEach",
      "body": "For Each ${1:Variable} In ${2:Collection} Do\n\t$0\nEndDo;",
      "description": "For Each"
    },
    "Procedure": {
      "prefix": "Procedure",
      "body": "Procedure ${1:ProcedureName}()\n\t$0\nEndProcedure",
      "description": "Procedure"
    },
    "Procedure (with header)": {
      "prefix": "Procedure",
      "body": "// <Procedure description>\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//\nProcedure ${1:ProcedureName}()\n\t$0\nEndProcedure // ${1:ProcedureName}()",
      "description": "Procedure (with header)"
    },
    "Procedure in a form module": {
      "prefix": "Procedure",
      "body": "// <Procedure description>\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//\n&${1:ChooseACompilationDirective}\nProcedure ${2:ProcedureName}()\n\t$0\nEndProcedure // ${2:ProcedureName}()",
      "description": "Procedure in a form module"
    },
    "Procedure in a command module": {
      "prefix": "Procedure",
      "body": "// <Procedure description>\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                  <parameter description continued>\n//\n&${1:ChooseACompilationDirective}\nProcedure ${2:ProcedureName}()\n\t$0\nEndProcedure // ${2:ProcedureName}()",
      "description": "Procedure in a command module"
    },
    "Function": {
      "prefix": "Function",
      "body": "Function ${1:FunctionName}()\n\t$0\nEndFunction // ${1:FunctionName}()",
      "description": "Function"
    },
    "Function (with header)": {
      "prefix": "Function",
      "body": "// <Function description>\n//\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//\n// Returns:\n//   <Type.Subtype>   - <returned value description>\n//\nFunction ${1:FunctionName}()\n\t$0\nEndFunction // ${1:FunctionName}()",
      "description": "Function (with header)"
    },
    "Function in a form module": {
      "prefix": "Function",
      "body": "// <Function description>\n//\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//\n// Returns:\n//   <Type.Subtype>   - <returned value description>\n//\n&${1:ChooseACompilationDirective}\nFunction ${2:FunctionName}()\n\t$0\nEndFunction // ${2:FunctionName}()",
      "description": "Function in a form module"
    },
    "Function in a command module": {
      "prefix": "Function",
      "body": "// <Function description>\n//\n//\n// Parameters:\n//  <Parameter1>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//  <Parameter2>  - <Type.Subtype> - <parameter description>\n//                 <parameter description continued>\n//\n// Returns:\n//   <Type.Subtype>   - <returned value description>\n//\n&${1:ChooseACompilationDirective}\nFunction ${2:FunctionName}()\n\t$0\nEndFunction // ${2:FunctionName}()",
      "description": "Function in a command module"
    },
    "Return": {
      "prefix": "Return",
      "body": "Return;$0",
      "description": "Return"
    },
    "Try": {
      "prefix": "Try",
      "body": "Try\n\t$0\nExcept\nEndTry;",
      "description": "Try"
    },
    "Compilation directive": {
      "prefix": "Directive",
      "body": "&${1:ChooseACompilationDirective}",
      "description": "Compilation directive"
    },
    "Instruction If": {
      "prefix": "Instrution",
      "body": "#If ${1:ChooseAPreprocessorInstruction} Then\n\t$0\n#EndIf",
      "description": "Instruction If"
    },
    "Instruction Region": {
      "prefix": "Region",
      "body": "#Region $0\n#EndRegion",
      "description": "Instruction Region"
    },
    "Enumeration": {
      "prefix": "Enums",
      "body": "PredefinedValue(\"Enum.${1:ChooseAnEnumerationValue}\")",
      "description": "Enumeration"
    },
    "Get a functional option": {
      "prefix": "Functionaloption",
      "body": "GetFunctionalOption(\"${1:ChooseAFunctionalOption}\")",
      "description": "Get a functional option"
    },
    "Get an interface functional option": {
      "prefix": "Functionaloption",
      "body": "GetInterfaceFunctionalOption(\"${1:ChooseAFunctionalOption}\")",
      "description": "Get an interface functional option"
    },
    "Open a common form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"CommonForm.${1:ChooseACommonForm}\");",
      "description": "Open a common form"
    },
    "Open a common form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"CommonForm.${1:ChooseACommonForm}\", FormParameters);",
      "description": "Open a common form (with parameters)"
    },
    "Get a common form": {
      "prefix": "GetForm",
      "body": "GetForm(\"CommonForm.${1:ChooseACommonForm}\");",
      "description": "Get a common form"
    },
    "Get a common form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"CommonForm.${1:ChooseACommonForm}\");",
      "description": "Get a common form (with parameters)"
    },
    "Open an exchange plan form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\");",
      "description": "Open an exchange plan form"
    },
    "Open an exchange plan form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\", FormParameters);",
      "description": "Open an exchange plan form (with parameters)"
    },
    "Get an exchange plan form": {
      "prefix": "GetForm",
      "body": "GetForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\");",
      "description": "Get an exchange plan form"
    },
    "Get an exchange plan form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"ExchangePlan.${1:ChooseAnExchangePlan}.${2:ChooseForm}\", FormParameters);",
      "description": "Get an exchange plan form (with parameters)"
    },
    "Items traversal": {
      "prefix": "ExchangePlansChoose",
      "body": "Selection = ExchangePlans.$1.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Items traversal"
    },
    "Get/Set constant": {
      "prefix": "Constants",
      "body": "Constants.$1.${2:SelectVariant}()",
      "description": "Get/Set constant"
    },
    "Set constant": {
      "prefix": "Constants",
      "body": "Constants.$1.Set($0);",
      "description": "Set constant"
    },
    "Get constant": {
      "prefix": "Constants",
      "body": "Constants.$1.Get()",
      "description": "Get constant"
    },
    "Open a catalog form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"Catalog.${1:ChooseACatalog}.${2:ChooseForm}$0\");",
      "description": "Open a catalog form"
    },
    "Open a catalog form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"Catalog.${1:ChooseCatalog}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a catalog form (with parameters)"
    },
    "Get a catalog form": {
      "prefix": "GetForm",
      "body": "GetForm(\"Catalog.${1:ChooseACatalog}.${2:ChooseForm}$0\");",
      "description": "Get a catalog form"
    },
    "Get a catalog form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"Catalog.${1:ChooseCatalog}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a catalog form (with parameters)"
    },
    "Item traversal": {
      "prefix": "CatalogsSelect",
      "body": "Select = Catalogs.$1.Select();\nWhile Select.Next() Do\n\t$0\nEndDo;",
      "description": "Item traversal"
    },
    "Items hierarchical traversal": {
      "prefix": "CatalogsSelectHierarchicaly",
      "body": "Select = Catalogs.$1.SelectHierarchicaly();\nWhile Select.Next() Do\n\t$0\nEndDo;",
      "description": "Items hierarchical traversal"
    },
    "Open a document form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}$0\");",
      "description": "Open a document form"
    },
    "Open a document form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a document form (with parameters)"
    },
    "Get a document form": {
      "prefix": "GetForm",
      "body": "GetForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}$0\");",
      "description": "Get a document form"
    },
    "Get a document form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"Document.${1:ChooseADocument}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a document form (with parameters)"
    },
    "Document walk-through": {
      "prefix": "DocumentsSelect",
      "body": "Select = Documents.$1.Select();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Document walk-through"
    },
    "RegisterRecords": {
      "prefix": "RegisterRecords",
      "body": "RegisterRecords.${1:ChooseARegister}",
      "description": "RegisterRecords"
    },
    "Open a report form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}$0\");",
      "description": "Open a report form"
    },
    "Open a report form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a report form (with parameters)"
    },
    "Get a report form": {
      "prefix": "GetForm",
      "body": "GetForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}$0\");",
      "description": "Get a report form"
    },
    "Get a report form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"Report.${1:ChooseAReport}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a report form (with parameters)"
    },
    "Open a data processor form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}$0\");",
      "description": "Open a data processor form"
    },
    "Open a data processor form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"DataProcessor.${1:ChooseADataProcessor}}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a data processor form (with parameters)"
    },
    "Get a data processor form": {
      "prefix": "GetForm",
      "body": "GetForm(\"DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}$0\");",
      "description": "Get a data processor form"
    },
    "Get a data processor form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"DataProcessor.${1:ChooseADataProcessor}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a data processor form (with parameters)"
    },
    "Open a chart of characteristic types form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharateristicTypes}.${2:ChooseForm}$0\");",
      "description": "Open a chart of characteristic types form"
    },
    "Open a chart of characteristic types form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a chart of characteristic types form (with parameters)"
    },
    "Get a chart of characteristic types form": {
      "prefix": "GetForm",
      "body": "GetForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}$0\");",
      "description": "Get a chart of characteristic types form"
    },
    "Get a chart of characteristic types form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"ChartOfCharacteristicTypes.${1:ChooseAChartOfCharacteristicTypes}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a chart of characteristic types form (with parameters)"
    },
    "Charts of characteristic types traversal": {
      "prefix": "ChartOfAccountsChoose",
      "body": "Selection = ChartOfAccounts.$1.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Charts of characteristic types traversal"
    },
    "Open a chart of accounts form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}$0\");",
      "description": "Open a chart of accounts form"
    },
    "Open a chart of accounts form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a chart of accounts form (with parameters)"
    },
    "Get a chart of accounts form": {
      "prefix": "GetForm",
      "body": "GetForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}$0\");",
      "description": "Get a chart of accounts form"
    },
    "Get a chart of accounts form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"ChartOfAccounts.${1:ChooseAChartOfAccounts}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a chart of accounts form (with parameters)"
    },
    "Find by code": {
      "prefix": "ChartsOfAccounts",
      "body": "ChartsOfAccounts.$1.FindByCode($0)",
      "description": "Find by code"
    },
    "Open a chart of calculation types form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}$0\");",
      "description": "Open a chart of calculation types form"
    },
    "Open a chart of calculation types form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a chart of calculation types form (with parameters)"
    },
    "Get a chart of calculation types form": {
      "prefix": "GetForm",
      "body": "GetForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}$0\");",
      "description": "Get a chart of calculation types form"
    },
    "Get a chart of calculation types form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"ChartOfCalculationTypes.${1:ChooseAChartOfCalculationTypes}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a chart of calculation types form (with parameters)"
    },
    "Charts of calculation types traversal": {
      "prefix": "ChartsOfCalculationTypesChoose",
      "body": "Selection = ChartsOfCalculationTypes.$1.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Charts of calculation types traversal"
    },
    "Open a business process form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}$0\");",
      "description": "Open a business process form"
    },
    "Open a business process form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a business process form (with parameters)"
    },
    "Get a business process form": {
      "prefix": "GetForm",
      "body": "GetForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}$0\");",
      "description": "Get a business process form"
    },
    "Get a business process form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"BusinessProcess.${1:ChooseABusinessProcess}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a business process form (with parameters)"
    },
    "Business processes traversal": {
      "prefix": "BusinessProcessesChoose",
      "body": "Selection = BusinessProcesses.$1.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Business processes traversal"
    },
    "Open a task form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"Task.${1:ChooseATask}.${2:ChooseForm}$0\");",
      "description": "Open a task form"
    },
    "Open a task form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"Task.${1:ChooseATask}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a task form (with parameters)"
    },
    "Get a task form": {
      "prefix": "GetForm",
      "body": "GetForm(\"Task.${1:ChooseATask}.${2:ChooseForm}$0\");",
      "description": "Get a task form"
    },
    "Get a task form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"Task.${1:ChooseATask}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a task form (with parameters)"
    },
    "Open an information register form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}$0\");",
      "description": "Open an information register form"
    },
    "Open an information register form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Open an information register form (with parameters)"
    },
    "Get an information register form": {
      "prefix": "GetForm",
      "body": "GetForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}$0\");",
      "description": "Get an information register form"
    },
    "Get an information register form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"InformationRegister.${1:ChooseAnInformationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Get an information register form (with parameters)"
    },
    "Selection of information register records": {
      "prefix": "InformationRegisterChoose",
      "body": "Selection = InformationRegister.${1:ChooseAnInformationRegister}.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Selection of information register records"
    },
    "Selection of information register records (by recorder)": {
      "prefix": "InformationRegisterSelectByRecorder",
      "body": "Selection = InformationRegister.${1:ChooseAnInformationRegister}.SelectByRecorder($0);\nWhile Selection.Next() Do\nEndDo;",
      "description": "Selection of information register records (by recorder)"
    },
    "Open an accumulation register form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}$0\");",
      "description": "Open an accumulation register form"
    },
    "Open an accumulation register form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Open an accumulation register form (with parameters)"
    },
    "Get an accumulation register form": {
      "prefix": "GetForm",
      "body": "GetForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}$0\");",
      "description": "Get an accumulation register form"
    },
    "Get an accumulation register form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"AccumulationRegister.${1:ChooseAnAccumulationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Get an accumulation register form (with parameters)"
    },
    "Selection of accumulation register records": {
      "prefix": "AccumulationRegisterChoose",
      "body": "Selection = AccumulationRegister.${1:ChooseAnAccumulationRegister}.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Selection of accumulation register records"
    },
    "Selection of accumulation register records (by recorder)": {
      "prefix": "AccumulationRegisterSelectByRecorder",
      "body": "Selection = AccumulationRegister.${1:ChooseAnAccumulationRegister}.SelectByRecorder($0);\nWhile Selection.Next() Do\nEndDo;",
      "description": "Selection of accumulation register records (by recorder)"
    },
    "Open an accounting register form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}$0\");",
      "description": "Open an accounting register form"
    },
    "Open an accounting register form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Open an accounting register form (with parameters)"
    },
    "Get an accounting register form": {
      "prefix": "GetForm",
      "body": "GetForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}$0\");",
      "description": "Get an accounting register form"
    },
    "Get an accounting register form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"AccountingRegister.${1:ChooseAnAccountingRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Get an accounting register form (with parameters)"
    },
    "Selection of accounting register records": {
      "prefix": "AccountingRegisterChoose",
      "body": "Selection = AccountingRegister.${1:ChooseAnAccountingRegister}.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Selection of accounting register records"
    },
    "Selection of accounting register records (by recorder)": {
      "prefix": "AccountingRegisterSelectByRecorder",
      "body": "Selection = AccountingRegister.${1:ChooseAnAccountingRegister}.SelectByRecorder($0);\nWhile Selection.Next() Do\nEndDo;",
      "description": "Selection of accounting register records (by recorder)"
    },
    "Open a calculation register form": {
      "prefix": "OpenForm",
      "body": "OpenForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}$0\");",
      "description": "Open a calculation register form"
    },
    "Open a calculation register form (with parameters)": {
      "prefix": "OpenForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nOpenForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Open a calculation register form (with parameters)"
    },
    "Get a calculation register form": {
      "prefix": "GetForm",
      "body": "GetForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}$0\");",
      "description": "Get a calculation register form"
    },
    "Get a calculation register form (with parameters)": {
      "prefix": "GetForm",
      "body": "FormParameters = New Structure;\nFormParameters.Insert(\"$0\", );\nForm = GetForm(\"CalculationRegister.${1:ChooseACalculationRegister}.${2:ChooseForm}\", FormParameters);",
      "description": "Get a calculation register form (with parameters)"
    },
    "Selection of calculation register records": {
      "prefix": "CalculationRegisterChoose",
      "body": "Selection = CalculationRegister.${1:ChooseACalculationRegister}.Choose();\nWhile Selection.Next() Do\n\t$0\nEndDo;",
      "description": "Selection of calculation register records"
    },
    "Selection of calculation register records (by recorder)": {
      "prefix": "CalculationRegisterSelectByRecorder",
      "body": "Selection = CalculationRegister.${1:ChooseACalculationRegister}.SelectByRecorder($0);\nWhile Selection.Next() Do\nEndDo;",
      "description": "Selection of calculation register records (by recorder)"
    },
    "Message": {
      "prefix": "Message",
      "body": "Message = New UserMessage;\nMessage.Text = \"$0\";\nMessage.Field = \"\";\nMessage.SetData();\nMessage.Message();",
      "description": "Message"
    },
    "DoMessageBox": {
      "prefix": "DoMessageBox",
      "body": "DoMessageBox($0);",
      "description": "DoMessageBox"
    },
    "Format": {
      "prefix": "Format",
      "body": "Format($0, \"$1\")",
      "description": "Format"
    },
    "Create a structure": {
      "prefix": "Structure",
      "body": "New Structure(\"$0\", )",
      "description": "Create a structure"
    },
    "Query": {
      "prefix": "Query",
      "body": "Query = New Query;\nQuery.Text = \"$1\";\nResult = Query.Execute();\nSelection = Result.Choose();\nWhile Selection.Next() Do\n  $0\nEndDo;",
      "description": "Query"
    },
    "Query with parameter": {
      "prefix": "Query",
      "body": "Query = New Query;\nQuery.Text = \"$1\";\nQuery.SetParameter(\"$0\", );\nResult = Query.Execute();\nSelection = Result.Choose();\nWhile Selection.Next() Do\nEndDo;",
      "description": "Query with parameter"
    },
    "Promt": {
      "prefix": "DoQueryBox",
      "body": "DoQueryBox(\"${1:PromptText}\", ${2:DialogPrompt})",
      "description": "Promt"
    },
    "Conditional Prompt": {
      "prefix": "DoQueryBox",
      "body": "DoQueryBox(\"${1:PromptText}\", ${2:DialogPrompt}) = ${3:DialogReturnCode}",
      "description": "Conditional Prompt"
    },
    "Type check": {
      "prefix": "TypeCheck",
      "body": "If TypeOf(${1:ExpressionForTypeCheck}) = Type(\"${2:ChooseType}\") Then\n\t$0\nEndIf;\n",
      "description": "Type check"
    }
  }

  querySnippets = {
    "Выбор": {
      "prefix": "Выбор",
      "body": "ВЫБОР\n\tКОГДА ${1:Условие}\n\t\tТОГДА $2\n\tИНАЧЕ $0\nКОНЕЦ",
      "description": "ВЫБОР"
    },
    "Запрос": {
      "prefix": "Запрос",
      "body": "ВЫБРАТЬ\n\t*\nИЗ\n\t${1:Источник} КАК ${0:Псевдоним}",
      "description": "Создание нового запроса"
    },
    "Левое": {
      "prefix": "Левое",
      "body": "ЛЕВОЕ СОЕДИНЕНИЕ ${1:Источник} КАК ${2:Псевдоним}\nПО ${3:Условие} = ${0:Условие}",
      "description": "Левое соединение"
    },
    "Правое": {
      "prefix": "Правое",
      "body": "ПРАВОЕ СОЕДИНЕНИЕ ${1:Источник} КАК ${2:Псевдоним}\nПО ${3:Условие} = ${0:Условие}",
      "description": "Правое соединение"
    },
    "Полное": {
      "prefix": "Полное",
      "body": "ПОЛНОЕ СОЕДИНЕНИЕ ${1:Источник} КАК ${2:Псевдоним}\nПО ${3:Условие} = ${0:Условие}",
      "description": "Полное соединение"
    },
    "Внутреннее": {
      "prefix": "Внутреннее",
      "body": "ВНУТРЕННЕЕ СОЕДИНЕНИЕ ${1:Источник} КАК ${2:Псевдоним}\nПО ${3:Условие} = ${0:Условие}",
      "description": "Внутреннее соединение"
    },
    "Разделитель": {
      "prefix": "Разделитель",
      "body": ";\n\n////////////////////////////////////////////////////////////////////////////////",
      "description": "Разделитель запросов"
    },
    "Выразить": {
      "prefix": "Выразить",
      "body": "ВЫРАЗИТЬ(${1:Источник} КАК ${2:Тип})$0",
      "description": "Приведение значение к определенному типу"
    },
  }

  DCSSnippets = {
    "Выбор": {
      "prefix": "Выбор",
      "body": "Выбор\n\tКогда ${1:Условие}\n\t\tТогда $2\n\tИначе $0\nКонец",
      "description": "Выбор"
    },
    "НачалоПериода": {
      "prefix": "НачалоПериода",
      "body": "НачалоПериода(\"$1\", ${2|\"Минута\",\"Час\",\"День\",\"Неделя\",\"Декада\",\"Месяц\",\"Квартал\",\"Полугодие\",\"Год\"|})",
      "description": "НачалоПериода"
    },
    "КонецПериода": {
      "prefix": "КонецПериода",
      "body": "КонецПериода(\"$1\", ${2|\"Минута\",\"Час\",\"День\",\"Неделя\",\"Декада\",\"Месяц\",\"Квартал\",\"Полугодие\",\"Год\"|})",
      "description": "КонецПериода"
    },
    "Вычислить": {
      "prefix": "Вычислить",
      "body": "Вычислить(\"$1\", ${2|\"\",\"ОбщийИтог\"|}, ${3|\"\",\"ОбщийИтог\",\"Группировка\"|})",
      "description": "Вычислить"
    },
    "ВычислитьВыражение": {
      "prefix": "ВычислитьВыражение",
      "body": "ВычислитьВыражение(\"$1\", ${2|\"\",\"ОбщийИтог\"|}, ${3|\"\",\"ОбщийИтог\",\"Группировка\",\"ГруппировкаНеРесурса\",\"Иерархия\"|}, ${4|\"Первая\",\"Последняя\",\"Предыдущая\",\"Следующая\",\"Текущая\",\"ОграничивающееЗначение\"|}, ${5|\"Первая\",\"Последняя\",\"Предыдущая\",\"Следующая\",\"Текущая\",\"ОграничивающееЗначение\"|}, \"$6\", ${7|\"Вместе\",\"Отдельно\"|})",
      "description": "ВычислитьВыражение"
    },
    "ДобавитьКДате": {
      "prefix": "ДобавитьКДате",
      "body": "ДобавитьКДате(\"$1\", ${2|\"Минута\",\"Час\",\"День\",\"Неделя\",\"Декада\",\"Месяц\",\"Квартал\",\"Полугодие\",\"Год\"|}, \"$3\")",
      "description": "ДобавитьКДате"
    },
    "РазностьДат": {
      "prefix": "РазностьДат",
      "body": "РазностьДат(\"$1\", \"$2\", ${3|\"Минута\",\"Час\",\"День\",\"Месяц\",\"Квартал\",\"Год\"|})",
      "description": "РазностьДат"
    }
  }

});