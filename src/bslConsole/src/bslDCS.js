define([], function () {
    bslDCS = {
        "functions": {
            "Вычислить": {
                "name": "Вычислить",
                "name_en": "Eval",
                "description": "Функция Вычислить предназначена для вычисления выражения в контексте некоторой группировки.\nВместо неё рекомендуется использовать функцию ВычислитьВыражение.",
                "returns": "Тип: Произвольный. Результат вычисления.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Группировка, ТипРасчета): Произвольный",
                        "Параметры": {
                            "Выражение": "Строка, содержит вычисляемое выражение",
                            "Группировка": "Строка, исходная дата (ОбщийИтог)",
                            "ТипРасчета": "Строка,  тип расчета (ОбщийИтог, Группировка)"
                        }
                    }
                }
            },
            "ВычислитьВыражение": {
                "name": "ВычислитьВыражение",
                "name_en": "EvalExpression",
                "description": "Функция ВычислитьВыражение предназначена для вычисления выражения в контексте некоторой группировки, учитывает отбор группировок, но не учитывает иерархические отборы.",
                "returns": "Тип: Произвольный. Результат вычисления.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Группировка, ТипРасчета, Начало, Конец, Сортировка, ИерархическаяСортировка, ОбработкаОдинаковыхЗначенийПорядка): Произвольный",
                        "Параметры": {
                            "Выражение": "Строка, содержит вычисляемое выражение",
                            "Группировка": "Строка, исходная дата (ОбщийИтог)",
                            "ТипРасчета": "Строка,  тип расчета (ОбщийИтог, Группировка, ГруппировкаНеРесурса, Иерархия)",
                            "Начало": "Строка, указывает, с какой записи нужно начинать фрагмент (Первая, Последняя, Предыдущая, Следующая, Текущая, ОграничивающееЗначение)",
                            "Конец": "Строка, указывает, до какой записи нужно продолжать фрагмент (Первая, Последняя, Предыдущая, Следующая, Текущая, ОграничивающееЗначение)",
                            "Сортировка": "Строка, в которой перечисляются выражения, разделенные запятыми, в направлении которых нужно упорядочивать последовательность (Убыв, Возр, Автоупорядочивание).",
                            "ИерархическаяСортировка": "Строка, в которой перечисляются выражения, разделенные запятыми, в направлении которых нужно упорядочивать (Убыв, Возр, Автоупорядочивание).",
                            "ОбработкаОдинаковыхЗначенийПорядка": "Строка, указывает правило определения предыдущей или следующий записи, если есть несколько записей с одинаковым значением упорядочивания (Вместе, Отдельно)."
                        }
                    }
                }
            },
            "ВычислитьВыражениеСГруппировкойМассив": {
                "name": "ВычислитьВыражениеСГруппировкойМассив",
                "name_en": "EvalExpressionWithGroupArray",
                "description": "Функция возвращает массив, каждый элемент которого содержит результат вычисления выражения для группировки по указанному полю.",
                "returns": "Тип: Массив. Результат вычисления.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, ВыраженияПолейГруппировки, ОтборЗаписей, ОтборГруппировок): Массив",
                        "Параметры": {
                            "Выражение": "Строка, выражение, которое нужно вычислить. Например, \"Сумма(СуммаОборот)\"",
                            "ВыраженияПолейГруппировки": "Строка, выражения полей группировки, перечисленные через запятую. Например, \"Контрагент, Партия\"",
                            "ОтборЗаписей": "Строка, выражение, применяемое к детальным записям.",
                            "ОтборГруппировок": "Строка, отбор, применяемый к групповым записям."
                        }
                    }
                }
            },
            "ВычислитьВыражениеСГруппировкойТаблицаЗначений": {
                "name": "ВычислитьВыражениеСГруппировкойТаблицаЗначений",
                "name_en": "EvalExpressionWithGroupValueTable",
                "description": "Функция возвращает таблицу значений, каждый элемент которого содержит результат вычисления выражения для группировки по указанному полю.",
                "returns": "Тип: ТаблицаЗначений. Результат вычисления.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, ВыраженияПолейГруппировки, ОтборЗаписей, ОтборГруппировок): ТаблицаЗначений",
                        "Параметры": {
                            "Выражение": "Строка, выражение, которое нужно вычислить. Например, \"Сумма(СуммаОборот)\"",
                            "ВыраженияПолейГруппировки": "Строка, выражения полей группировки, перечисленные через запятую. Например, \"Контрагент, Партия\"",
                            "ОтборЗаписей": "Строка, выражение, применяемое к детальным записям.",
                            "ОтборГруппировок": "Строка, отбор, применяемый к групповым записям."
                        }
                    }
                }
            },
            "Год": {
                "name": "Год",
                "name_en": "Year",
                "description": "Данная функция предназначена для выделения года из значения типа Дата.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется год."
                        }
                    }
                }
            },
            "День": {
                "name": "День",
                "name_en": "Day",
                "description": "Данная функция предназначена для получения дня месяца из значения типа Дата. День месяца в норме находится в диапазоне от 1 до 31.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяют день месяца"
                        }
                    }
                }
            },
            "ДеньГода": {
                "name": "ДеньГода",
                "name_en": "DayOfYear",
                "description": "Данная функция предназначена для получения дня года из значения типа Дата. День года в норме находится в диапазоне от 1 до 365 (366).",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется день года."
                        }
                    }
                }
            },
            "ДеньНедели": {
                "name": "ДеньНедели",
                "name_en": "WeekDay",
                "description": "Данная функция предназначена для получения дня недели из значения типа Дата. День недели в норме находится в диапазоне от 1 (понедельник) до 7 (воскресенье).",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется день недели."
                        }
                    }
                }
            },
            "Квартал": {
                "name": "Квартал",
                "name_en": "Quarter",
                "description": "Данная функция предназначена для выделения номера квартала из значения типа Дата. Номер квартала в норме находится в диапазоне от 1 до 4.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется квартал"
                        }
                    }
                }
            },
            "Месяц": {
                "name": "Месяц",
                "name_en": "Month",
                "description": "Данная функция предназначена для выделения номера месяца из значения типа Дата. Номер месяца в норме находится в диапазоне от 1 до 12.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется месяц."
                        }
                    }
                }
            },
            "Неделя": {
                "name": "Неделя",
                "name_en": "Week",
                "description": "Данная функция предназначена для получения номера недели года из значения типа Дата. Недели года нумеруются, начиная с 1.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется номер недели."
                        }
                    }
                }
            },
            "Час": {
                "name": "Час",
                "name_en": "Hour",
                "description": "Данная функция предназначена для получения часа суток из значения типа Дата. Час суток находится в диапазоне от 0 до 23.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется час суток."
                        }
                    }
                }
            },
            "Минута": {
                "name": "Минута",
                "name_en": "Minute",
                "description": "Данная функция предназначена для получения минуты часа из значения типа Дата. Минута часа находится в диапазоне от 0 до 59.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется минута часа."
                        }
                    }
                }
            },
            "Секунда": {
                "name": "Секунда",
                "name_en": "Second",
                "description": "Данная функция предназначена для получения секунды минуты из значения типа Дата. Секунда минуты находится в диапазоне от 0 до 59.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата): Дата",
                        "Параметры": {
                            "Дата": "Дата, по которой определяется секунда минуты."
                        }
                    }
                }
            },
            "НачалоПериода": {
                "name": "НачалоПериода",
                "name_en": "BeginOfPeriod",
                "description": "Функция предназначена для вычисления даты начала периода для заданной даты.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата, ТипПериода): Дата",
                        "Параметры": {
                            "Дата": "Дата, заданная дата.",
                            "ТипПериода": "Строка, содержит одно из значений: Минута, Час, День, Неделя, Декада, Месяц, Квартал, Полугодие, Год."
                        }
                    }
                }
            },
            "КонецПериода": {
                "name": "КонецПериода",
                "name_en": "EndOfPeriod",
                "description": "Функция предназначена для вычисления даты конца периода для заданной даты.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Дата, ТипПериода): Дата",
                        "Параметры": {
                            "Дата": "Дата, заданная дата.",
                            "ТипПериода": "Строка, содержит одно из значений: Минута, Час, День, Неделя, Декада, Месяц, Квартал, Полугодие, Год."
                        }
                    }
                }
            },
            "ДобавитьКДате": {
                "name": "ДобавитьКДате",
                "name_en": "DateAdd",
                "description": "Функция предназначена для прибавления к дате некоторой величины.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, ТипУвеличения, Величина): Дата",
                        "Параметры": {
                            "Выражение": "Дата, исходная дата.",
                            "ТипУвеличения": "Строка, содержит одно из значений: Минута, Час, День, Неделя, Декада, Месяц, Квартал, Полугодие, Год.",
                            "Величина": "Число, на сколько необходимо увеличить дату (дробная часть игнорируется)."
                        }
                    }
                }
            },
            "РазностьДат": {
                "name": "РазностьДат",
                "name_en": "DateDiff",
                "description": "Функция предназначена для получения разницы между двумя датами.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение1, Выражение2, ТипРазности): Число",
                        "Параметры": {
                            "Выражение1": "Дата, вычитаемая дата.",
                            "Выражение2": "Дата, исходная дата.",
                            "ТипРазности": "Строка, содержит одно из значений: Минута, Час, День, Месяц, Квартал, Год."
                        }
                    }
                }
            },
            "ДатаВремя": {
                "name": "ДатаВремя",
                "name_en": "DateTime",
                "description": "Функция предназначена для получения даты.",
                "returns": "Тип: Дата.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Год, Месяц, День, Час, Минута, Секунда): Дата",
                        "Параметры": {
                            "Год": "Число, год.",
                            "Месяц": "Число, месяц.",
                            "День": "Число, день.",
                            "Час": "Число, час.",
                            "Минута": "Число, минута.",
                            "Секунда": "Число, секунда."
                        }
                    }
                }
            },
            "НомерПоПорядку": {
                "name": "НомерПоПорядку",
                "name_en": "SerialNumber",
                "description": "Получить следующий порядковый номер.",
                "returns": "Тип: Число."
            },
            "НомерПоПорядкуВГруппировке": {
                "name": "НомерПоПорядкуВГруппировке",
                "name_en": "GroupSerialNumber",
                "description": "Возвращает следующий порядковый номер в текущей группировке.",
                "returns": "Тип: Число."
            },
            "Уровень": {
                "name": "Уровень",
                "name_en": "Level",
                "description": "Функция предназначена для получения текущего уровня записи.",
                "returns": "Тип: Число."
            },
            "УровеньВГруппировке": {
                "name": "УровеньВГруппировке",
                "name_en": "LevelInGroup",
                "description": "Данная функция получает текущий уровень записи относительно группировки.\nМожет быть использована для получения уровня вложенности записи в иерархической группировке.",
                "returns": "Тип: Число."
            },
            "ЗначениеЗаполнено": {
                "name": "ЗначениеЗаполнено",
                "name_en": "ValueIsFilled",
                "description": "Проверяет значение на заполненность.\nДля значений NULL, Неопределено всегда возвращает Ложь.\nДля значений Булево всегда возвращает Истину.\nДля остальных типов возвращает Истину, если значение отличается от значения по умолчанию для данного типа.",
                "returns": "Тип: Булево.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Значение): Булево",
                        "Параметры": {
                            "Значение": "Произвольный, проверяемое значение."
                        }
                    }
                }
            },
            "Формат": {
                "name": "Формат",
                "name_en": "Format",
                "description": "Получить отформатированную строку переданного значения.",
                "returns": "Тип: Строка.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Значение, ФорматнаяСтрока): Строка",
                        "Параметры": {
                            "Значение": "Произвольный, проверяемое значение.",
                            "ФорматнаяСтрока": "Строка, задается в соответствии с форматной строкой 1С:Предприятие"
                        }
                    }
                }
            },
            "ACos": {
                "name": "ACos",
                "name_en": "ACos",
                "description": "Вычисляет арккосинус в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение косинуса (в диапазоне -1 ... 1), по которому определяется угол."
                        }
                    }
                }
            },
            "ASin": {
                "name": "ASin",
                "name_en": "ASin",
                "description": "Вычисляет арксинус в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение синуса (в диапазоне -1 ... 1), по которому определяется угол."
                        }
                    }
                }
            },
            "ATan": {
                "name": "ATan",
                "name_en": "ATan",
                "description": "Вычисляет арктангенс в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение тангенса, по которому определяется угол."
                        }
                    }
                }
            },
            "Cos": {
                "name": "Cos",
                "name_en": "Cos",
                "description": "Вычисляет косинус в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение косинуса, по которому определяется угол."
                        }
                    }
                }
            },
            "Exp": {
                "name": "Exp",
                "name_en": "Exp",
                "description": "Возведение числа e в степень.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение степени."
                        }
                    }
                }
            },
            "Log": {
                "name": "Log",
                "name_en": "Log",
                "description": "Вычисляет натуральный логарифм.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, исходное число, больше 0."
                        }
                    }
                }
            },
            "Log10": {
                "name": "Log10",
                "name_en": "Log10",
                "description": "Вычисляет логарифм X по основанию 10.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, исходное число, больше 0."
                        }
                    }
                }
            },
            "Sin": {
                "name": "Sin",
                "name_en": "Sin",
                "description": "Вычисляет синус в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение синуса, по которому определяется угол."
                        }
                    }
                }
            },
            "Sqrt": {
                "name": "Sqrt",
                "name_en": "Sqrt",
                "description": "Вычисляет квадратный корень.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, неотрицательное число."
                        }
                    }
                }
            },
            "Pow": {
                "name": "Pow",
                "name_en": "Pow",
                "description": "Возведение в степень.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Основание, Показатель): Число",
                        "Параметры": {
                            "Основание": "Число, основание операции возведения в степень.",
                            "Показатель": "Число, показатель степени."
                        }
                    }
                }
            },
            "Tan": {
                "name": "Tan",
                "name_en": "Tan",
                "description": "Вычисляет синус в радианах.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, значение тангенса, по которому определяется угол."
                        }
                    }
                }
            },
            "Окр": {
                "name": "Окр",
                "name_en": "Round",
                "description": "Округляет исходное число до нужной разрядности. Режим округления стандартный (1,5 как 2).",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Разрядность): Число",
                        "Параметры": {
                            "Выражение": "Число, исходное число.",
                            "Разрядность": " Число, знаков дробной части, до которых производится округление."
                        }
                    }
                }
            },
            "Цел": {
                "name": "Цел",
                "name_en": "Int",
                "description": "Отсекает дробную часть числа.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, исходное дробное число."
                        }
                    }
                }
            },
            "ДлинаСтроки": {
                "name": "ДлинаСтроки",
                "name_en": "StringLength",
                "description": "Функция предназначена для определения длины строки.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Число",
                        "Параметры": {
                            "Строка": "Строка, длина которой определяется."
                        }
                    }
                }
            },
            "Подстрока": {
                "name": "Подстрока",
                "name_en": "Substring",
                "description": "Данная функция предназначена для выделения подстроки из строки.",
                "returns": "Тип: Строка.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка, Позиция, Длина): Строка",
                        "Параметры": {
                            "Строка": "Строка, из которой выделяют подстроку.",
                            "Позиция": "Число, позиция символа, с которого начинается выделяемая из строки подстрока.",
                            "Длина": "Число, длина выделяемой подстроки."
                        }
                    }
                }
            },
            "Выразить": {
                "name": "Выразить",
                "name_en": "Cast",
                "description": "Данная функция предназначена для выделения типа из выражения, которое может содержать составной тип.",
                "returns": "Тип: Произвольный.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, УказаниеТипа): Произвольный",
                        "Параметры": {
                            "Выражение": "Преобразуемое выражение.",
                            "УказаниеТипа": "Строка, типа."
                        }
                    }
                }
            },
            "ЕстьNull": {
                "name": "ЕстьNull",
                "name_en": "IsNull",
                "description": "Данная функция возвращает значение второго параметра в случае, если значение первого параметра NULL.\nВ противном случае будет возвращено значение первого параметра.",
                "returns": "Тип: Произвольный.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение1, Выражение2): Произвольный",
                        "Параметры": {
                            "Выражение1": "Проверяемое значение.",
                            "Выражение2": "Возвращаемое значение, если значение Выражение1 есть NULL."
                        }
                    }
                }
            },
            "Представление": {
                "name": "Представление",
                "name_en": "Resentation",
                "description": "Данная функция возвращает строковое представление переданного значения не примитивного типа.\nДля значений примитивного типа возвращает само значение.",
                "returns": "Тип: Строка.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Строка",
                        "Параметры": {
                            "Выражение": "Приводимое выражение"
                        }
                    }
                }
            },
            "Строка": {
                "name": "Строка",
                "name_en": "String",
                "description": "Данная функция преобразует переданное значение в строку.",
                "returns": "Тип: Строка.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Строка",
                        "Параметры": {
                            "Выражение": "Произвольный, преобразуемое значение."
                        }
                    }
                }
            },
            "ТипЗначения": {
                "name": "ТипЗначения",
                "name_en": "ValueType",
                "description": "Возвращает значение типа Тип, содержащее тип значения параметра функции.",
                "returns": "Тип: Тип.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Тип",
                        "Параметры": {
                            "Выражение": "Строка, строковое значение типа."
                        }
                    }
                }
            },
            "Сумма": {
                "name": "Сумма",
                "name_en": "Sum",
                "description": "Вычисляет агрегатную сумму.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Строка, выражение."
                        }
                    }
                }
            },
            "Количество": {
                "name": "Количество",
                "name_en": "Count",
                "description": "Вычисляет агрегатное количество.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Строка, выражение."
                        }
                    }
                }
            },
            "Среднее": {
                "name": "Среднее",
                "name_en": "Avg",
                "description": "Вычисляет агрегатное среднее.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Строка, выражение."
                        }
                    }
                }
            },
            "Минимум": {
                "name": "Минимум",
                "name_en": "Min",
                "description": "Вычисляет агрегатный минимум.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Строка, выражение."
                        }
                    }
                }
            },
            "Максимум": {
                "name": "Максимум",
                "name_en": "Max",
                "description": "Вычисляет агрегатный максимум.",
                "returns": "Тип: Число.",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Строка, выражение."
                        }
                    }
                }
            },
            "Массив": {
                "name": "Массив",
                "name_en": "Array",
                "description": "Функция формирует массив, содержащий для каждой детальной записи значение параметра.\nЕсли выражение содержит функцию Массив, то считается, что данное выражение является агрегатным.\nЕсли указано ключевое слово Различные, то получаемый массив не будет содержать дублирующихся значений.",
                "returns": "Тип: Массив",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Массив",
                        "Параметры": {
                            "Выражение": "В качестве параметра можно использовать таблицу значений. При этом результатом работы функции будет массив, содержащий значения первой колонки таблицы значений, переданной в качестве параметра. "
                        }
                    }
                }
            },
            "ТаблицаЗначений": {
                "name": "ТаблицаЗначений",
                "name_en": "ValueTable",
                "description": "Функция формирует таблицу значений, содержащую столько колонок, сколько параметров у функции.\nДетальные записи получаются из наборов данных, которые нужны для получения всех полей, участвующих в выражениях параметров функции.\nЕсли указано ключевое слово Различные, то в получаемой таблице значений не будет строк, содержащих одинаковые данные.\nПосле каждого параметра может располагаться необязательное ключевое слово КАК и имя, которое будет назначено колонке таблицы значений.\nЕсли выражение содержит функцию ТаблицаЗначений, то считается, что данное выражение является агрегатным.",
                "returns": "Тип: ТаблицаЗначений",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение1, Выражение2?): ТаблицаЗначений",
                        "Параметры": {
                            "Выражение1": "Если параметрами функции выступают поля–остатки, то в результирующую таблицу значений попадут значения для записей по уникальным комбинациям измерений из других периодов.\nПри этом значения получаются только для полей-остатков, измерений, счетов, полей периодов и их реквизитов.\nЗначениями остальных полей в записях из других периодов считаются равными NULL.",
                            "Выражение2": "Если параметрами функции выступают поля–остатки, то в результирующую таблицу значений попадут значения для записей по уникальным комбинациям измерений из других периодов.\nПри этом значения получаются только для полей-остатков, измерений, счетов, полей периодов и их реквизитов.\nЗначениями остальных полей в записях из других периодов считаются равными NULL."
                        }
                    }
                }
            },
            "Свернуть": {
                "name": "Свернуть",
                "name_en": "GroupBy",
                "description": "Функция предназначена для удаления дубликатов из массива.",
                "returns": "Тип: Массив, ТаблицаЗначений",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Колонки?): Массив, ТаблицаЗначений",
                        "Параметры": {
                            "Выражение": "Выражение типа Массив или ТаблицаЗначений, значения элементов которого нужно свернуть",
                            "Колонки": "Если выражение имеет тип ТаблицаЗначений тип Строка. Номера или имена (через запятую) колонок таблицы значений, среди которых нужно искать дубликаты. По умолчанию – все колонки."
                        }
                    }
                }
            },
            "ПолучитьЧасть": {
                "name": "ПолучитьЧасть",
                "name_en": "GetPart",
                "description": "Функция получает таблицу значений, содержащую определенные колонки из исходной таблицы значений.",
                "returns": "Тип: ТаблицаЗначений",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Колонки?): ТаблицаЗначений",
                        "Параметры": {
                            "Выражение": "Таблица значений, из которой нужно получить колонки",
                            "Колонки": "Строка. Номера или имена (через запятую) колонок таблицы значений, которые нужно получить."
                        }
                    }
                }
            },
            "Упорядочить": {
                "name": "Упорядочить",
                "name_en": "Order",
                "description": "Предназначена для упорядочивания элементов массива и таблицы значений.",
                "returns": "Тип: Массив, ТаблицаЗначений",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение, Колонки?): Массив, ТаблицаЗначений",
                        "Параметры": {
                            "Выражение": "Массив или ТаблицаЗначений, из которой нужно получить колонки",
                            "Колонки": "Если выражение имеет тип ТаблицаЗначений номера или имена (через запятую) колонок таблицы значений, по которым нужно упорядочить.\nМожет содержать направление упорядочивания и необходимость автоупорядочивания: Убыв/Возр + Автоупорядочивание."
                        }
                    }
                }
            },
            "СоединитьСтроки": {
                "name": "СоединитьСтроки",
                "name_en": "JoinStrings",
                "description": "Предназначена для объединения строк в одну строку.",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Значение, РазделительЭлементов?, РазделителиКолонок?): Строка",
                        "Параметры": {
                            "Значение": "Выражения, которые нужно объединить в одну строку. Если является Массивом, то в строку будут объединяться элементы массива. Если является ТаблицаЗначений, то в строку будут объединяться все колонки и строки таблицы",
                            "РазделительЭлементов": "Строка, содержащая текст, который нужно использовать в качестве разделителя между элементами массива и строками таблицы значений. По умолчанию – символ перевода строк",
                            "РазделителиКолонок": "Cтрока, содержащая текст, который нужно использовать в качестве разделителя между колонками таблицы значений. По умолчанию ';'"
                        }
                    }
                }
            },
            "ГрупповаяОбработка": {
                "name": "ГрупповаяОбработка",
                "name_en": "GroupProcessing",
                "description": "Предназначена для объединения строк в одну строку.",
                "returns": "Тип: ДанныеГрупповойОбработкиКомпоновкиДанных",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражения, ВыраженияИерархии, ИмяГруппировки): ДанныеГрупповойОбработкиКомпоновкиДанных",
                        "Параметры": {
                            "Выражения": " Выражения, которые нужно вычислить. Строка, в которой через запятую перечислены выражения, которые нужно вычислить. После каждого выражение возможно наличие необязательного ключевого слова КАК и имени колонки результирующей таблицы значений. Каждое выражение образует колонку таблицы значений свойства Данные объекта ДанныеГрупповойОбработкиКомпоновкиДанных",
                            "ВыраженияИерархии": "Выражения, которые нужно вычислить для иерархических записей. Аналогично параметру Выражения с тем отличием, что параметр ВыраженияИерархии используется для иерархических записей. Если параметр не указан, то для вычисления значений для иерархических записей используется выражения, указанные в параметре Выражение.",
                            "ИмяГруппировки": "Имя группировки, в которой нужно вычислять группировку обработки. Строка. Если не указано, то вычисление происходит в текущей группировке. Если вычисление идет в таблице и параметр содержит пустую строку, или не указан, то значение вычисляется для группировки – строки. Компоновщик макета при генерации макета компоновки данных заменяет данное имя на имя группировки в результирующем макете. Если группировка не доступна, то функция будет заменена на значение NULL."
                        }
                    }
                }
            },
            "Каждый": {
                "name": "Каждый",
                "name_en": "Every",
                "description": "Если хоть одна запись имеет значение Ложь, то результат Ложь. Иначе Истина.",
                "returns": "Тип: Булево",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Булево",
                        "Параметры": {
                            "Выражение": "Булево, выражение"
                        }
                    }
                }
            },
            "Любой": {
                "name": "Любой",
                "name_en": "Any",
                "description": "Если хоть одна запись имеет значение Истина, то результат Истина. Иначе Ложь",
                "returns": "Тип: Булево",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Булево",
                        "Параметры": {
                            "Выражение": "Булево, выражение"
                        }
                    }
                }
            },
            "СтандартноеОтклонениеГенеральнойСовокупности": {
                "name": "СтандартноеОтклонениеГенеральнойСовокупности",
                "name_en": "Stddev_Pop",
                "description": "Вычисляет стандартное отклонение совокупности. Вычисляется по формуле: SQRT(ДисперсияГенеральнойСовокупности(X))",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, выражение"
                        }
                    }
                }
            },
            "СтандартноеОтклонениеВыборки": {
                "name": "СтандартноеОтклонениеВыборки",
                "name_en": "Stddev_Samp",
                "description": "Вычисляет совокупное типовое стандартное отклонение. Вычисляется по формуле: SQRT(ДисперсияВыборки(X))",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, выражение"
                        }
                    }
                }
            },
            "ДисперсияВыборки": {
                "name": "ДисперсияВыборки",
                "name_en": "Var_Samp",
                "description": "Вычисляет типовое различие ряда чисел без учета значений NULL в этом наборе. Вычисляется по формуле: (Сумма(X^2) - Сумма(X)^2 / Количество(X)) / (Количество(X) - 1)\nЕсли Количество(X) = 1, то возвращается значение NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, выражение"
                        }
                    }
                }
            },
            "ДисперсияГенеральнойСовокупности": {
                "name": "ДисперсияГенеральнойСовокупности",
                "name_en": "Var_Pop",
                "description": "Вычисляет различие совокупности ряда чисел без учета значений NULL в этом наборе. Вычисляется по формуле: (Сумма(X ^2) - Сумма(X)^2 / Количество(X)) / Количество(X)",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): Число",
                        "Параметры": {
                            "Выражение": "Число, выражение"
                        }
                    }
                }
            },
            "КовариацияГенеральнойСовокупности": {
                "name": "КовариацияГенеральнойСовокупности",
                "name_en": "Covar_Pop",
                "description": "Вычисляет ковариацию ряда числовых пар. Вычисляется по формуле: (Сумма(Y * X) - Сумма(X) * Сумма(Y) / n) / n, где n число пар (Y, X) в которых ни Y ни X не являются NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "КовариацияВыборки": {
                "name": "КовариацияВыборки",
                "name_en": "Covar_Samp",
                "description": "Вычисляет типовое различие ряда чисел без учета значений NULL в этом наборе. Вычисляется по формуле: (Сумма(Y * X) - Сумма(Y) * Сумма(X) / n) / (n-1), где n число пар (Y, X) в которых ни Y ни X не являются NULL",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "Корреляция": {
                "name": "Корреляция",
                "name_en": "Corr",
                "description": "Вычисляет коэффициент корреляции ряда числовых пар. Вычисляется по формуле: КовариацияГенеральнойСовокупности(Y, X) / (СтандартноеОтклонениеГенеральнойСовокупности(Y) * СтандартноеОтклонениеГенеральнойСовокупности(X)) Не учитываются пары, в которых Y или X NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияНаклон": {
                "name": "РегрессияНаклон",
                "name_en": "Regr_Slope",
                "description": "Вычисляет наклон линии. Вычисляется по формуле: КовариацияГенеральнойСовокупности(Y, X) / ДисперсияГенеральнойСовокупности(X). Вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияОтрезок": {
                "name": "РегрессияОтрезок",
                "name_en": "Regr_Intercept",
                "description": "Вычисляет Y-точку пересечения линии регресса. Вычисляется по формуле:\nСреднее(Y) - РегрессияНаклон(Y, X) * Среднее(X). Вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияКоличество": {
                "name": "РегрессияКоличество",
                "name_en": "Regr_Count",
                "description": "Вычисляет количество пар не содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияR2": {
                "name": "РегрессияR2",
                "name_en": "Regr_R2",
                "description": "Вычисляет коэффициент детерминации. Вычисляется без учета пар, содержащих NULL.\nNull - если ДисперсияГенеральнойСовокупности(X) = 0;\n1 - если ДисперсияГенеральнойСовокупности(Y)=0 И ДисперсияГенеральнойСовокупности(X)<>0;\nPOW(Корреляция(Y,X),2) - если ДисперсияГенеральнойСовокупности(Y)>0 И ДисперсияГенеральнойСовокупности(X)<>0",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияСреднееX": {
                "name": "РегрессияСреднееX",
                "name_en": "Regr_AvgX",
                "description": "Вычисляет среднее число X после исключения X и Y пар, где или X или Y являются пустыми. Среднее(X) вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияСреднееY": {
                "name": "РегрессияСреднееY",
                "name_en": "Regr_AvgY",
                "description": "Вычисляет среднее число Y после исключения X и Y пар, где или X или Y являются пустыми. Среднее(Y) вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияSXX": {
                "name": "РегрессияSXX",
                "name_en": "Regr_SXX",
                "description": "Вычисляется по формуле: РегрессияКоличество(Y, X) * ДисперсияГенеральнойСовокупности(X). Вычисляется без учета пар, содержащих NULL. Возвращает сумму квадратов независимых выражений, используемых в линейной модели регресса. Функция может использоваться, чтобы оценить статистическую обоснованность модели регресса.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияSYY": {
                "name": "РегрессияSYY",
                "name_en": "Regr_SYY",
                "description": "Вычисляется по формуле: РегрессияКоличество(Y, X) * ДисперсияГенеральнойСовокупности(Y). Вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "РегрессияSXY": {
                "name": "РегрессияSXY",
                "name_en": "Regr_SXY",
                "description": "Вычисляется по формуле: РегрессияКоличество(Y, X) * КовариацияГенеральнойСовокупности(Y, X) Вычисляется без учета пар, содержащих NULL.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Y, X): Число",
                        "Параметры": {
                            "Y": "Число",
                            "X": "Число"
                        }
                    }
                }
            },
            "МестоВПорядке": {
                "name": "МестоВПорядке",
                "name_en": "Rank",
                "description": "Если в последовательности имеются две или более записей с одинаковыми значениями полей упорядочивания, то для всех записей функция возвращает одинаковые значения.",
                "returns": "Тип: Произвольный",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Порядок, ПорядокИерархии, ИмяГруппировки): Произвольный",
                        "Параметры": {
                            "Порядок": "Строка, содержит выражения, в последовательности которых нужно расположить групповые записи, разделенные через запятую. Направление упорядочивания управляется при помощи слов Возр, Убыв. После поля также можно указать строку Автоупорядочивание, что обозначает, что при упорядочивании ссылок нужно использовать поля упорядочивания, определенные для объекта, на который ссылка. Если последовательность не указана, то значение рассчитывается в последовательности группировки.",
                            "ПорядокИерархии": "Строка, Содержит выражения упорядочивания для иерархических записей.",
                            "ИмяГруппировки": "Строка, имя группировки, в которой нужно вычислять функцию. Если не указано, то вычисление происходит в текущей группировке. Если вычисление идет в таблице и параметр содержит пустую строку, или не указан, то значение вычисляется для группировки – строки. Компоновщик макета при генерации макета компоновки данных заменяет данное имя на имя группировки в результирующем макете. Если группировка не доступна, то функция будет заменена на значение NULL."
                        }
                    }
                }
            },
            "КлассификацияABC": {
                "name": "КлассификацияABC",
                "name_en": "ClassificationABC",
                "description": "Результатом работы функции будет номер класса, начиная с 1, который соответствует классу A.",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Значение, КоличествоГрупп, ПроцентыДляГрупп, ИмяГруппировки): Число",
                        "Параметры": {
                            "Значение": "Строка. Указывает выражение, для которого следует рассчитывать классификацию.",
                            "КоличествоГрупп": "Число. Задает количество групп, на который нужно разбить",
                            "ПроцентыДляГрупп": "Строка. Столько, на сколько групп нужно разбить минус 1. Через запятую. Если не задано, то автоматически.",
                            "ИмяГруппировки": "Строка. Имя группировки, в которой нужно вычислять группировку обработки. Если не указано, то вычисление происходит в текущей группировке. Если вычисление идет в таблице и параметр содержит пустую строку, или не указан, то значение вычисляется для группировки – строки. Компоновщик макета при генерации макета компоновки данных заменяет данное имя на имя группировки в результирующем макете. Если группировка не доступна, то функция будет заменена на значение NULL."
                        }
                    }
                }
            }
        },
        "functions_8_3_20": {
            "СокрЛ": {
                "name": "СокрЛ",
                "name_en": "TrimL",
                "description": "Отбросывает незначащие пробелы слева",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Строка",
                        "Параметры": {
                            "Строка": "Строка, для которой необходимо отборосить пробелы"
                        }
                    }
                }
            },
            "СокрП": {
                "name": "СокрП",
                "name_en": "TrimR",
                "description": "Отбрасывает незначащие пробелы cправа",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Строка",
                        "Параметры": {
                            "Строка": "Строка, для которой необходимо отборосить пробелы"
                        }
                    }
                }
            },
            "СокрЛП": {
                "name": "СокрЛП",
                "name_en": "TrimAll",
                "description": "Отбрасывает незначащие пробелы слева и справа",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Строка",
                        "Параметры": {
                            "Строка": "Строка, для которой необходимо отборосить пробелы"
                        }
                    }
                }
            },
            "Лев": {
                "name": "Лев",
                "name_en": "Left",
                "description": "Получает первые слева символы строк",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка, КоличествоСимволов): Строка",
                        "Параметры": {
                            "Строка": "Строка, для которой необходимо получить символы",
                            "КоличествоСимволов": "Число символов слева"
                        }
                    }
                }
            },
            "Прав": {
                "name": "Прав",
                "name_en": "Right",
                "description": "Получает первые справа символы строк",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка, КоличествоСимволов): Строка",
                        "Параметры": {
                            "Строка": "Строка, для которой необходимо получить символы",
                            "КоличествоСимволов": "Число символов справа"
                        }
                    }
                }
            },
            "СтрНайти": {
                "name": "СтрНайти",
                "name_en": "StrFind",
                "description": "Функция находит первую позицию подстроки в строке (без учета регистра).",
                "returns": "Тип: Число",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка, Подстрока): Число",
                        "Параметры": {
                            "Строка": "Строка, в которой осуществляется поиск",
                            "Подстрока": "Строка, которую необходимо найти"
                        }
                    }
                }
            },
            "ВРег": {
                "name": "ВРег",
                "name_en": "Upper",
                "description": "Преобразует все символы строки в верхний регистр.",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Строка",
                        "Параметры": {
                            "Строка": "Строка для преобразования"
                        }
                    }
                }
            },
            "НРег": {
                "name": "НРег",
                "name_en": "Lower",
                "description": "Преобразует все символы строки в нижний регистр.",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка): Строка",
                        "Параметры": {
                            "Строка": "Строка для преобразования"
                        }
                    }
                }
            },
            "СтрЗаменить": {
                "name": "СтрЗаменить",
                "name_en": "StrReplace",
                "description": "Заменяет все вхождения подстроки на другую подстроку (без учета регистра)",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Строка, Подстрока, Замена): Строка",
                        "Параметры": {
                            "Строка": "Строка, в которой осуществляется поиск",
                            "Подстрока": "Строка, которую необходимо заменить",
                            "Замена": "Строка, замена для подстроки"
                        }
                    }
                }
            },
            "НСтр": {
                "name": "НСтр",
                "name_en": "NStr",
                "description": "Получает строку на языке пользователя (аналогично тому, как работает метод НСтр глобального контекста)",
                "returns": "Тип: Строка",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(ИсходнаяСтрока, КодЯзыка?): Строка",
                        "Параметры": {
                            "ИсходнаяСтрока": "Cтрока, содержащая строки на разных языках (например, ru = 'Добрый вечер!'; en = 'Good Evening!')",
                            "КодЯзыка": "Строка с кодом языка, на котором нужно получать строку. Если не указан - строка получается на языке текущего пользователя"
                        }
                    }
                }
            }
        },
        "functions_8_3_22" : {
            "УникальныйИдентификатор": {
                "name": "УНИКАЛЬНЫЙИДЕНТИФИКАТОР",
                "name_en": "UUID",
                "description": "Позволяет получить уникальный идентификатор переданной ссылки",
                "returns": "УникальныйИдентификатор/NULL/Неопределено",
                "signature": {
                    "default": {
                        "СтрокаПараметров": "(Выражение): УникальныйИдентификатор",
                        "Параметры": {
                            "Значение": "Выражение, результатом вычисления которого является ссылочное значение (кроме ссылки на таблицы внешних источников данных)"
                        }
                    }
                }
            }
        }
    }
});